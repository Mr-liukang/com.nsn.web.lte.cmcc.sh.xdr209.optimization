package com.nsn.web.lte.cmcc.sh.xdr209.optimization.action;

import org.apache.commons.lang3.time.DateUtils;

import com.nsn.web.lte.cmcc.sh.xdr209.optimization.action.bean.OperateConst;
import com.nsn.web.lte.utils.Ret;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Test {

    static SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

    public static void main(String args[]) {
        String start = "2019-07-28 00:00:00";
        String end = "2019-07-28 01:00:00";
        String firstEnd = "2019-07-28 01:00:00";
        Integer backtrackingStep = 1;
        long maxBacktrackingTime = 5;
        
        //String imsimsisdn = "8628888888";
        String _cplain_descrip = "860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888"+
        					"860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888860888888886088888888608888888";
        //String _cplain_descrip = "860888888886";
		String cplain_descrip = ( !"".equals(_cplain_descrip) && _cplain_descrip!=null ) ? ((_cplain_descrip.length()>2000)?_cplain_descrip.substring(0, 1999):_cplain_descrip):"";
        System.out.println("length:"+_cplain_descrip.length());
        System.out.println("cplain_descrip:"+cplain_descrip);
        /*if ("862".equals(imsimsisdn.subSequence(0, 3)) || "860".equals(imsimsisdn.subSequence(0, 3))) {
        	System.out.println("imsimsisdn:"+imsimsisdn);
		}*/
        //callDPI(firstEnd, start, end, backtrackingStep, maxBacktrackingTime);
    }


    public static void callDPI(String firstEnd, String start, String end, Integer backtrackingStep, long maxBacktrackingTime){
        try {
            String flag = "0";
            System.out.println("firstEnd:"+firstEnd+";start:"+start+";end:"+end);
            if("0".equals(flag)){//查询结果flag为0，不符合预期，执行轮询查询
                Date endTime = DateUtils.parseDate(end, "yyyy-MM-dd HH:mm:ss");
                Date firstEndTime = DateUtils.parseDate(firstEnd, "yyyy-MM-dd HH:mm:ss");
                long backTime = (endTime.getTime() - firstEndTime.getTime()) / (1000 * 60 * 60);
                if (maxBacktrackingTime > backTime) {
                    String _start = end;
                    String _end = df.format(DateUtils.addHours(DateUtils.parseDate(_start, "yyyy-MM-dd HH:mm:ss"), backtrackingStep));
                    callDPI(firstEnd, _start, _end, backtrackingStep, maxBacktrackingTime);
                }else{

                }
            }else{//结束轮询，执行分析过程

            }
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
}
